{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","u","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,uDAAf,UAEI,qBAAKC,IAAM,SAASC,IAAG,+BAA4BH,EAA5B,cACvB,gCACI,6BAAKF,IACL,4BAAIC,WCSLK,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACA,8BAEQA,EAAOC,KAAI,SAACC,EAAGC,GACX,OAAQ,cAAC,EAAD,CACJR,GAAIK,EAAOG,GAAGR,GACdF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHFS,SCKtBC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAY,gCACZW,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCCTI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,aCuCJC,E,kDApCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAZzC,EAAKC,MAAQ,CACLvB,OAAQ,GACRK,YAAa,IAJZ,E,qDAOb,WAAoB,IAAD,OACfmB,MAAM,8CACLtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAACpB,OAAQ2B,S,oBAM1C,WAAS,IAAD,EAC0BC,KAAKL,MAA5BvB,EADH,EACGA,OAAQK,EADX,EACWA,YACTwB,EAAiB7B,EAAO8B,QAAO,SAAAC,GACjC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS5B,EAAY2B,kBAEzD,OAAQhC,EAAOkC,OAIP,sBAAKtC,UAAU,KAAf,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAgBsB,KAAKV,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAU6B,SAPhC,6C,GAvBMM,aCClBC,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.2e238ec8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({name, email, id}) => {\n     \n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5'>\n            \n            <img alt = 'robots' src = {`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\nconst CardList = ({robots}) => {\n    \n    return(\n    <div>\n        {\n            robots.map((u, i)=>{\n                return (<Card key = {i} \n                    id={robots[i].id} \n                    name = {robots[i].name} \n                    email = {robots[i].email} />)\n            })\n        }\n    </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n    return (\n        <div className='pa2'>\n            <input \n            className = 'pa3 b--green bg-lightest-blue'\n            type='search' \n            placeholder='search robots' \n            onChange = {searchChange}/>\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style = {{overflowY: 'scroll', border: '3px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\n\nclass App extends Component  {\n    constructor(){\n        super()\n        this.state = {\n                robots: [],\n                searchfield: ''\n        }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({robots: users }));\n        \n    }\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n    render(){\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n        return !robots.length ? \n            <h1>Loading</h1>\n            :\n            (\n                <div className='tc'>\n                    <h1 className = 'f1'>RoboFriends</h1>\n                    <SearchBox searchChange = {this.onSearchChange} />\n                    <Scroll>\n                        <CardList robots = {filteredRobots}/>\n                    </Scroll>\n                </div>\n            )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from \"./containers/App\";\n\n\nReactDOM.render(\n  \n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}